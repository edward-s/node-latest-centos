name: Build releases

on:
  workflow_dispatch:
    inputs:
        version:
          description: 'Node Version'
          required: true

jobs:
  build:
    name: Build ${{ matrix.tag }} Version
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag:
          - current
    container:
      image: centos:7
    env:
      VERSION: ${{ github.event.inputs.version }}
      PRE_RELEASE: false

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setting up the environment
      run: |
        yum makecache
        yum install -y centos-release-scl-rh centos-release-scl
        yum install -y devtoolset-10-gcc devtoolset-10-gcc-c++ devtoolset-10-make wget make python3 curl

    - name: Download Node source code
      run: |
        wget https://nodejs.org/dist/v${{ env.VERSION }}/node-v${{ env.VERSION }}.tar.xz
        tar -Jxf node-v${{ env.VERSION }}.tar.xz

    - name: Build Node
      run: |
        source /opt/rh/devtoolset-10/enable
        cd node-v${{ env.VERSION }}
        ./configure --prefix=../node-v${{ env.VERSION }}-linux-x$(getconf LONG_BIT)
        make -j$(($(nproc --all)+1)) && make install && cp -a ./{LICENSE,CHANGELOG.md,README.md} ../node-v${{ env.VERSION }}-linux-x$(getconf LONG_BIT)/
        strip ../node-v${{ env.VERSION }}-linux-x$(getconf LONG_BIT)/bin/node

    - name: Create Archive
      run: |
        mkdir tar
        tar Jcvf tar/node-v${{ env.VERSION }}-linux-x$(getconf LONG_BIT).tar.xz node-v${{ env.VERSION }}-linux-x$(getconf LONG_BIT)
        tar zcvf tar/node-v${{ env.VERSION }}-linux-x$(getconf LONG_BIT).tar.gz node-v${{ env.VERSION }}-linux-x$(getconf LONG_BIT)
        cd tar && sha256sum node-v* > sha256sum.txt

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: node-v${{ env.VERSION }}
        path: tar/*

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        name: node-v${{ env.VERSION }}
        allowUpdates: true
        tag: v${{ env.VERSION }}
        commit: master
        replacesArtifacts: true
        prerelease: ${{ env.PRE_RELEASE }}
        token: ${{ secrets.workflow_token }}
        artifacts: tar/*
